iris
hist(iris[,2])
hist(iris[,1])
hist(iris[,3])
data
?data
x <- read.table("http://www.seattlecentral.edu/qelp/sets/057/s057.txt")
x
hist(x)
x <- read.table("http://www.seattlecentral.edu/qelp/sets/057/s057.txt")
x
hist(x)
x <- read.table("http://www.seattlecentral.edu/qelp/sets/057/s057.txt",
header=FALSE)
hist(x)
x <- read.table("http://www.seattlecentral.edu/qelp/sets/057/s057.txt",
header=FALSE)
x
class(x)
class(x[,1])
hist(x)
x <- as.numeric(x)
unique(x)
plot(x)
x <- as.double(x)
x <- x[,1]
x
hist(x)
housefly <- read.table("http://www.seattlecentral.edu/qelp/sets/057/s057.txt",
header=FALSE)[,1]*0.1
hist(x)
x
hist(housefly)
wings
hist(wings, col="grey")
points(rep(0, times=length(wings)), wings)
wings <- read.table("http://www.seattlecentral.edu/qelp/sets/057/s057.txt", header=FALSE)[,1]*0.1
wings
hist(wings)
points(rep(0, times=length(wings)), wings)
length(wings)
points(wings, rep(0, times=100))
points(wings, jitter(rep(0, times=100)))
jitter(x)
hist(wings)
points(wings, jitter(rep(0, times=100)))
?hist
hist(wings, freq=TRUE)
points(wings, jitter(rep(0, times=100)))
hist(wings, freq=FALSE)
points(wings, jitter(rep(0, times=100)))
par(mfrow=c(1,2))
hist(wings, freq=FALSE)
points(wings, jitter(rep(0, times=100)))
curve(dnorm)
curve(pnorm)
?curve
curve(pnorm, from=-2, to=2)
curve(dnorm, from=-2, to=2)
curve(dnorm)
curve(dnorm, from=-4, to=4)
wings
par(mfrow=c(1,2))
hist(wings, freq=TRUE, col="grey")
points(wings, rep(0, times=100))
hist(wings, freq=FALSE, col="grey")
jitter
>jitter
?jitter
wings
par(mfrow=c(1,2))
hist(wings, freq=TRUE, col="grey")
points(wings, jitter(rep(0, times=100), factor=3))
hist(wings, freq=FALSE, col="grey")
wings
par(mfrow=c(1,2))
hist(wings, freq=TRUE, col="grey")
points(wings, jitter(rep(0, times=100), factor=5))
hist(wings, freq=FALSE, col="grey")
wings
par(mfrow=c(1,2))
hist(wings, freq=TRUE, col="grey")
points(wings, jitter(rep(0, times=100), factor=10))
hist(wings, freq=FALSE, col="grey")
wings
par(mfrow=c(1,2))
hist(wings, freq=TRUE, col="grey")
points(wings, jitter(rep(0, times=100), factor=10))
hist(wings, freq=FALSE, col="grey")
points(wings, jitter(rep(0, times=100), factor=1))
?dnorm
?curve
curve(dnorm, from=-4, to=4, ylab="p(x)")
curve(dnorm, from=-4, to=4, ylab="p(x)", mean=3)
curve(dnorm(mean=3), from=-4, to=4, ylab="p(x)")
?cuve
?curve
curve(dnorm, from=-4, to=4, ylab="p(x)")
curve(dnorm(sd=3), from=-4, to=4, ylab="p(x)")
?curve
curve(dnorm(sd=3), from=-4, to=4, ylab="p(x)", type="function")
curve(dnorm(x, mean=2, sd=1), from=-4, to=4, ylab="p(x)")
par(mfrow=c(1,4))
curve(dnorm, from=-4, to=8, ylab="p(x)")
curve(dnorm(x, mean=6, sd=2), from=-4, to=8, ylab="p(x)", ylim=c(0, 0.4))
12*12
curve(dnorm, from=-4, to=4)
points(wings)
points(wings)
points(wings, rep(0, 100))
curve(dnorm(x, mean=0, sd=1), from=-5, to=8, ylab="p(x)", ylim=c(0, 0.4))
points(wings, rep(0, 100))
curve(dnorm(x, mean=0, sd=1), from=0, to=8, ylab="p(x)", ylim=c(0, 0.4))
points(wings, rep(0, 100))
par(mfrow=c(1,4))
curve(dnorm(x, mean=0, sd=1), from=0, to=7, ylab="p(x)", ylim=c(0, 0.4))
points(wings, rep(0, 100))
curve(dnorm(x, mean=4, sd=2), from=0, to=7, ylab="p(x)", ylim=c(0, 0.4))
curve(dnorm(x, mean=2, sd=3), from=0, to=7, ylab="p(x)", ylim=c(0, 0.4))
curve(dnorm(x, mean=6, sd=1), from=0, to=7, ylab="p(x)", ylim=c(0, 0.4))
points(wings, jitter(rep(0, 100)))
points(wings, jitter(rep(0, 100), factor=0.1))
curve(dnorm(x, mean=0, sd=1), from=0, to=7, ylab="p(x)", ylim=c(0, 0.4))
points(wings, jitter(rep(0, 100), factor=0.1))
par(mfrow=c(1,4))
curve(dnorm(x, mean=1, sd=1), from=0, to=7, ylab="p(x)", ylim=c(0, 0.4))
points(wings, jitter(rep(0, 100), factor=0.1))
curve(dnorm(x, mean=4, sd=2), from=0, to=7, ylab="p(x)", ylim=c(0, 0.4))
points(wings, jitter(rep(0, 100), factor=0.1))
curve(dnorm(x, mean=2, sd=3), from=0, to=7, ylab="p(x)", ylim=c(0, 0.4))
points(wings, jitter(rep(0, 100), factor=0.1))
curve(dnorm(x, mean=1, sd=1), from=0, to=7, ylab="p(x)", ylim=c(0, 0.4))
points(wings, jitter(rep(0, 100), factor=0.1))
par(mfrow=c(1,4))
curve(dnorm(x, mean=1, sd=1), from=0, to=7, ylab="p(x)", ylim=c(0, 0.6),
main="mean=1, sd=1")
points(wings, jitter(rep(0, 100), factor=0.1))
curve(dnorm(x, mean=4, sd=2), from=0, to=7, ylab="p(x)", ylim=c(0, 0.6))
points(wings, jitter(rep(0, 100), factor=0.1))
curve(dnorm(x, mean=2, sd=3), from=0, to=7, ylab="p(x)", ylim=c(0, 0.6))
points(wings, jitter(rep(0, 100), factor=0.1))
curve(dnorm(x, mean=4.5, sd=0.7), from=0, to=7, ylab="p(x)", ylim=c(0, 0.6))
points(wings, jitter(rep(0, 100), factor=0.1))
likelihood.plotter <- function(x, point.index, mean, sd)
{
x.axis <- seq(from=min(x), to=max(x), by=0.1)
y.axis <- dnorm(x.axis, mean=mean, sd=sd)
point.value <- round( x[point.index], 2)
L <-dnorm(point.value, mean=mean, sd=sd)
L <- round(L, 4)
# plotting
title <- paste("Model parameters: mean =", mean, "; sd =", sd)
plot(x.axis, y.axis,
ylim=c(0,max(y.axis)),
type="l", xlab="x", ylab="p(x)",
main=title)
points(x, rep(0, times=length(x)), col="grey")
points(point.value, 0, pch=19)
lines(c(point.value,point.value), c(0, L), col="red")
lines(c(min(x), point.value), c(L, L), col="red")
text(x=min(x), y=L+0.02, pos=4,
labels=paste("p(x|mean,sd) =",L), col="red")
text(x=point.value+0.02, y=0.02, pos=4,
labels=paste("x =",point.value), col="red")
}
likelihood.plotter(x=wings, point.index=30, mean=5, sd=1)
library(manipulate)
manipulate(likelihood.plotter(x=wings, point.index, mean, sd),
point.index=slider(1,100),
mean=slider(0,10),
sd=slider(0,3))
library(manipulate)
manipulate(likelihood.plotter(x=wings, point.index, mean, sd),
point.index=slider(1,100),
mean=slider(0,10),
sd=slider(0,3))
library(manipulate)
manipulate(likelihood.plotter(x=wings, point.index, mean, sd),
point.index=slider(1,100),
mean=slider(0,10),
sd=slider(0.01,3, step=0.01))
library(manipulate)
manipulate(likelihood.plotter(x=wings, point.index, mean, sd),
point.index=slider(1,100),
mean=slider(0,10),
sd=slider(0.01,3, step=0.01, initial=1))
library(manipulate)
manipulate(likelihood.plotter(x=wings, point.index, mean, sd),
point.index=slider(1,100),
mean=slider(0,10),
sd=slider(0.01,3, step=0.01, initial=1))
library(manipulate)
manipulate(likelihood.plotter(x=wings, point.index, mean, sd),
point.index=slider(1,100),
mean=slider(0,10, step=0.1),
sd=slider(0.01,3, step=0.01, initial=1))
library(manipulate)
manipulate(likelihood.plotter(x=wings, point.index, mean, sd),
point.index=slider(1,100),
mean=slider(0,10, step=0.1),
sd=slider(0.01,3, step=0.01, initial=1))
library(manipulate)
manipulate(likelihood.plotter(x=wings, point.index, mean, sd),
point.index=slider(1,100),
mean=slider(0,10, step=0.1),
sd=slider(0.01,3, step=0.01, initial=1))
library(manipulate)
manipulate(likelihood.plotter(x=wings, point.index, mean, sd),
point.index=slider(1,100),
mean=slider(0,10, step=0.1, initial=5),
sd=slider(0.01,3, step=0.01, initial=0.7))
library(manipulate)
manipulate(likelihood.plotter(x=wings, point.index, mean, sd),
point.index=slider(1,100),
mean=slider(0,10, step=0.1, initial=5),
sd=slider(0.01,2, step=0.01, initial=0.7))
likelihood.plotter <- function(x, point.index, mean, sd)
{
x.axis <- seq(from=min(x) - 1, to=max(x) + 1, by=0.1)
y.axis <- dnorm(x.axis, mean=mean, sd=sd)
point.value <- round( x[point.index], 2)
L <-dnorm(point.value, mean=mean, sd=sd)
L <- round(L, 4)
# plotting
title <- paste("Model parameters: mean =", mean, "; sd =", sd)
plot(x.axis, y.axis,
ylim=c(0,max(y.axis)),
type="l", xlab="x", ylab="p(x)",
main=title)
points(x, rep(0, times=length(x)), col="grey")
points(point.value, 0, pch=19)
lines(c(point.value,point.value), c(0, L), col="red")
lines(c(min(x), point.value), c(L, L), col="red")
text(x=min(x), y=L+0.02, pos=4,
labels=paste("p(x|mean,sd) =",L), col="red")
text(x=point.value+0.02, y=0.02, pos=4,
labels=paste("x =",point.value), col="red")
}
library(manipulate)
manipulate(likelihood.plotter(x=wings, point.index, mean, sd),
point.index=slider(1,100),
mean=slider(0,10, step=0.1, initial=5),
sd=slider(0.01,2, step=0.01, initial=0.7))
library(manipulate)
manipulate(likelihood.plotter(x=wings, point.index, mean, sd),
point.index=slider(1,100),
mean=slider(2,7, step=0.1, initial=5),
sd=slider(0.01,2, step=0.01, initial=0.7))
likelihood.plotter <- function(x, point.index, mean, sd)
{
x.axis <- seq(from=min(x) - 1, to=max(x) + 1, by=0.1)
y.axis <- dnorm(x.axis, mean=mean, sd=sd)
point.value <- round( x[point.index], 2)
L <-dnorm(point.value, mean=mean, sd=sd)
L <- round(L, 4)
# plotting
title <- paste("Model parameters: mean =", mean, "; sd =", sd)
plot(x.axis, y.axis,
ylim=c(0,max(y.axis)),
type="l", xlab="wing length [mm]", ylab="p(wing length)",
main=title)
points(x, rep(0, times=length(x)), col="grey")
points(point.value, 0, pch=19)
lines(c(point.value,point.value), c(0, L), col="red")
lines(c(min(x), point.value), c(L, L), col="red")
text(x=min(x), y=L+0.02, pos=4,
labels=paste("p(x|mean,sd) =",L), col="red")
text(x=point.value+0.02, y=0.02, pos=4,
labels=paste("x =",point.value), col="red")
}
library(manipulate)
manipulate(likelihood.plotter(x=wings, point.index, mean, sd),
point.index=slider(1,100),
mean=slider(2,7, step=0.1, initial=5),
sd=slider(0.01,2, step=0.01, initial=0.7))
likelihood.plotter <- function(x, point.index, mean, sd)
{
x.axis <- seq(from=min(x) - 1, to=max(x) + 1, by=0.1)
y.axis <- dnorm(x.axis, mean=mean, sd=sd)
point.value <- round( x[point.index], 2)
L <-dnorm(point.value, mean=mean, sd=sd)
L <- round(L, 4)
# plotting
title <- paste("Model parameters: mean =", mean, "; sd =", sd)
plot(x.axis, y.axis,
ylim=c(0,max(y.axis)),
type="l", xlab="length [mm]", ylab="p(length)",
main=title)
points(x, rep(0, times=length(x)), col="grey")
points(point.value, 0, pch=19)
lines(c(point.value,point.value), c(0, L), col="red")
lines(c(min(x), point.value), c(L, L), col="red")
text(x=min(x), y=L+0.02, pos=4,
labels=paste("p(length|mean,sd) =",L), col="red")
text(x=point.value+0.02, y=0.02, pos=4,
labels=paste("x =",point.value), col="red")
}
library(manipulate)
manipulate(likelihood.plotter(x=wings, point.index, mean, sd),
point.index=slider(1,100),
mean=slider(2,7, step=0.1, initial=5),
sd=slider(0.01,2, step=0.01, initial=0.7))
likelihood.plotter <- function(x, point.index, mean, sd)
{
x.axis <- seq(from=min(x) - 1, to=max(x) + 1, by=0.1)
y.axis <- dnorm(x.axis, mean=mean, sd=sd)
point.value <- round( x[point.index], 2)
L <-dnorm(point.value, mean=mean, sd=sd)
L <- round(L, 4)
# plotting
title <- paste("Model parameters: mean =", mean, "; sd =", sd)
plot(x.axis, y.axis,
ylim=c(0,max(y.axis)),
type="l", xlab="length [mm]", ylab="p(length)",
main=title)
points(x, rep(0, times=length(x)), col="grey")
points(point.value, 0, pch=19)
lines(c(point.value,point.value), c(0, L), col="red")
lines(c(min(x), point.value), c(L, L), col="red")
text(x=min(x), y=L+0.02, pos=4,
labels=paste("p(x|mean,sd) =", L), col="red")
text(x=point.value+0.02, y=0.02, pos=4,
labels=paste("x =",point.value), col="red")
}
library(manipulate)
manipulate(likelihood.plotter(x=wings, point.index, mean, sd),
point.index=slider(1,100),
mean=slider(2,7, step=0.1, initial=5),
sd=slider(0.01,2, step=0.01, initial=0.7))
likelihood.plotter <- function(x, point.index, mean, sd)
{
x.axis <- seq(from=min(x) - 1, to=max(x) + 1, by=0.1)
y.axis <- dnorm(x.axis, mean=mean, sd=sd)
point.value <- round( x[point.index], 2)
L <-dnorm(point.value, mean=mean, sd=sd)
L <- round(L, 4)
# plotting
title <- paste("Model parameters: mean =", mean, "; sd =", sd)
plot(x.axis, y.axis,
ylim=c(0,max(y.axis)),
type="l", xlab="length [mm]", ylab="p(length|mean,sd)",
main=title)
points(x, rep(0, times=length(x)), col="grey")
points(point.value, 0, pch=19)
lines(c(point.value,point.value), c(0, L), col="red")
lines(c(min(x), point.value), c(L, L), col="red")
text(x=min(x), y=L+0.02, pos=4,
labels=paste("p(length|mean,sd) =", L), col="red")
text(x=point.value+0.02, y=0.02, pos=4,
labels=paste("x =",point.value), col="red")
}
likelihood.plotter(x=wings, point.index=30, mean=5, sd=1)
library(manipulate)
manipulate(likelihood.plotter(x=wings, point.index, mean, sd),
point.index=slider(1,100),
mean=slider(2,7, step=0.1, initial=5),
sd=slider(0.01,2, step=0.01, initial=0.7))
likelihood.plotter <- function(x, point.index, mean, sd)
{
x.axis <- seq(from=min(x) - 1, to=max(x) + 1, by=0.1)
y.axis <- dnorm(x.axis, mean=mean, sd=sd)
point.value <- round( x[point.index], 2)
L <-dnorm(point.value, mean=mean, sd=sd)
L <- round(L, 4)
# plotting
title <- paste("Model parameters: mean =", mean, "; sd =", sd)
plot(x.axis, y.axis,
ylim=c(0,max(y.axis)),
type="l", xlab="x", ylab="p(x|mean,sd)",
main=title)
points(x, rep(0, times=length(x)), col="grey")
points(point.value, 0, pch=19)
lines(c(point.value,point.value), c(0, L), col="red")
lines(c(min(x), point.value), c(L, L), col="red")
text(x=min(x), y=L+0.02, pos=4,
labels=paste("p(x|mean,sd) =", L), col="red")
text(x=point.value+0.02, y=0.02, pos=4,
labels=paste("x =",point.value), col="red")
}
library(manipulate)
manipulate(likelihood.plotter(x=wings, point.index, mean, sd),
point.index=slider(1,100),
mean=slider(2,7, step=0.1, initial=5),
sd=slider(0.01,2, step=0.01, initial=0.7))
likelihood.plotter <- function(x, point.index, mean, sd)
{
x.axis <- seq(from=min(x) - 1, to=max(x) + 1, by=0.1)
y.axis <- dnorm(x.axis, mean=mean, sd=sd)
point.value <- round( x[point.index], 2)
L <-dnorm(point.value, mean=mean, sd=sd)
L <- round(L, 4)
# plotting
title <- paste("Model parameters: mean =", mean, "; sd =", sd)
plot(x.axis, y.axis,
ylim=c(0,max(y.axis)),
type="l", xlab="x", ylab="p(x|mean,sd)",
main=title)
points(x, rep(0, times=length(x)), col="grey")
points(point.value, 0, pch=19)
lines(c(point.value,point.value), c(0, L), col="red")
lines(c(min(x)-1, point.value), c(L, L), col="red")
text(x=min(x), y=L+0.02, pos=4,
labels=paste("p(x|mean,sd) =", L), col="red")
text(x=point.value+0.02, y=0.02, pos=4,
labels=paste("x =",point.value), col="red")
}
library(manipulate)
manipulate(likelihood.plotter(x=wings, point.index, mean, sd),
point.index=slider(1,100),
mean=slider(2,7, step=0.1, initial=5),
sd=slider(0.01,2, step=0.01, initial=0.7))
x <- rnorm(100)
deviance.function(x, mean=0, sd=1)
deviance.function <- function(x, mean, sd)
{
LL <- dnorm(x=x, mean=mean, sd=sd, log=TRUE) # note the log!!!
deviance <- - sum(LL)
return(deviance)
}
# it's a function of model parameters, so try to play
# around with different paramter values
deviance.function(wings, mean=0, sd=1)
x <- rnorm(100)
deviance.function(x, mean=0, sd=1)
wings <- read.table("http://goo.gl/4lPBG6", header=FALSE)[,1]*0.1
wings
par(mfrow=c(1,2))
hist(wings, freq=TRUE, col="grey")
points(wings, jitter(rep(0, times=100), factor=10))
hist(wings, freq=FALSE, col="grey")
points(wings, jitter(rep(0, times=100), factor=0.7))
par(mfrow=c(1,4))
curve(dnorm(x, mean=1, sd=1), from=0, to=7, ylab="p(x)", ylim=c(0, 0.6),
main="mean=1, sd=1")
points(wings, jitter(rep(0, 100), factor=0.1))
curve(dnorm(x, mean=4, sd=2), from=0, to=7, ylab="p(x)", ylim=c(0, 0.6),
main="mean=4, sd=2")
points(wings, jitter(rep(0, 100), factor=0.1))
curve(dnorm(x, mean=2, sd=3), from=0, to=7, ylab="p(x)", ylim=c(0, 0.6),
main="mean=2, sd=3")
points(wings, jitter(rep(0, 100), factor=0.1))
curve(dnorm(x, mean=4.5, sd=0.7), from=0, to=7, ylab="p(x)", ylim=c(0, 0.6),
main="mean=4.5, sd=0.7")
points(wings, jitter(rep(0, 100), factor=0.1))
my.mean = 4
my.sd = 1
wings.i <- wings[1]
wings.i
L <- dnorm(x=wings.i, mean=my.mean, sd=my.sd)
L
curve(dnorm(x, my.mean, my.sd), from=0, to=7,
ylab="p(wings | mu, sigma)", xlab="wings",
main=paste("p(wings.i | mu, sigma) = ", round(L, 4)))
points(wings.i, 0)
abline(v=wings.i, col="red")
abline(h=L, col="red")
wings
L <- dnorm(x=wings, mean=my.mean, sd=my.sd)
L
prod(L)
- sum(log(L))
deviance.function <- function(x, mean, sd)
{
LL <- dnorm(x=x, mean=mean, sd=sd, log=TRUE) # note the log!!!
deviance <- - sum(LL)
return(deviance)
}
# it's a function of model parameters, so try to play
# around with different paramter values
deviance.function(wings, mean=0, sd=1)
deviance.function()
hist()
curve()
deviance.function.wings <- function(par)
{
LL <- dnorm(x=wings, mean=par[1], sd=par[2], log=TRUE) # note the log!!!
deviance <- - sum(LL)
return(deviance)
}
optim(par=c(0,1),deviance.function.wings)
deviance.function.wings <- function(par, dat)
{
LL <- dnorm(x=dat, mean=par[1], sd=par[2], log=TRUE) # note the log!!!
deviance <- - sum(LL)
return(deviance)
}
optim(par=c(0,1),deviance.function.wings, dat=wings)
optim(par=c(0,1),deviance.function.wings, dat=rnorm(100))
?optim
deviance.function.wings <- function(par, dat)
{
LL <- dnorm(x=dat, mean=par[1], sd=par[2], log=TRUE) # note the log!!!
deviance <- - sum(LL)
return(deviance)
}
optim(par=c(mean=0,var=1),
fn=deviance.function.wings,
dat=wings)
?pdf
